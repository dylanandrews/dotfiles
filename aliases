# Unix
alias ll="ls -al"
alias ln="ln -v"
alias mkdir="mkdir -p"
alias e="$EDITOR"
alias v="$VISUAL"
alias cc="say 'Command complete'"

# Claude
alias cr="claude --resume"

# Cursor
alias cs="cursor ."

# Git
alias g="git"
alias gaac="g aa && g ci"
alias gacm="g aa && g ci --amend"
alias cor="git recent | selecta | xargs git checkout"
alias gr="git recent"
alias grh="git reset --hard"
alias so="source /Users/dylanandrews/.dotfiles/aliases"
alias gpo="git pull origin \$(git branch --show-current)"
alias gs="git stash"
alias gsp="git stash pop"
alias gp="git prune"
alias gstu="git status -uno"
alias gst="git status"
alias gpf="git push --force"
alias gpu="git push"
alias gpmr="git pull origin master --rebase"
alias gprc="gh pr create"

# Node
alias ygls="yarn global list"
alias yga="yarn global add"
alias yi="yarn install"
alias yr="yarn run"
alias ys="yarn start"
alias ngls="npm list -g --depth 0"

# EZA
alias ls="eza"

alias atom='open -a Atom'
alias g='git'
alias h='cd ~'
alias dot='cd ~/.dotfiles'
alias btu='cd ~/Documents/betterup_repos/betterup-monolith'
alias btuw='cd ~/Documents/betterup_repos/betterup-monolith-worktrees'
alias pos='git pull origin staging'
alias cos='git checkout staging'
alias rc='bundle exec rails console'
alias rdm='bundle exec rake db:migrate'
alias rdr='bundle exec rake db:rollback'
alias rtp='bundle exec rake db:test:prepare'
alias bss='bundle exec spring stop'
alias awsstaging='awsume staging && kubectl config use-context staging'

# Weatherfetch gem
alias wfd='weatherfetch daily 37205'
alias wfh='weatherfetch hourly 37205'

# tmux
alias mux="tmuxinator"
alias tk="tmux kill-server"
alias ls32="lsof -ti tcp:3002 | xargs kill"
alias ls31="lsof -ti tcp:3001 | xargs kill"
alias ls30="lsof -ti tcp:3000 | xargs kill"
alias lsall="lsof -ti tcp:3002 | xargs kill;lsof -ti tcp:3001 | xargs kill;lsof -ti tcp:3000 | xargs kill"
alias tmj="tmuxinator start taxjar -p ~/.dotfiles/tmuxinator/taxjar.yml"


# Pretty print the path
alias path='echo $PATH | tr -s ":" "\n"'

# Allows searching history and updating in your editor
function rr() {
  hist=$(history | sort -rn | fzf +m --height 40% | awk '{ print $1 }')
  fc $hist
}

function resetdb {
  bundle exec rails db:environment:set RAILS_ENV=development
  if [[ $1 == '-f' ]] || [[ $1 == '--full' ]]; then
    echo "DB Reset (full)"
    bundle exec rails log:clear db:setup
    export FULL=1
    bundle exec rails seed:channels seed:games seed:videos seed:youtube_videos seed:discover_modules seed:mixes seed:recommendation_tiles seed:randomizer_tiles
  elif [[ $1 == '-s' ]] || [[ $1 == '--simple' ]]; then
    echo "DB Reset (simple)"
    bundle exec rails log:clear db:drop db:create db:schema:load
  else
    echo "DB Reset"
    bundle exec rails log:clear db:setup seed:discover_modules seed:recommendation_tiles seed:randomizer_tiles
  fi
  echo "Preparing Test DB"
  RAILS_ENV=test bundle exec rails db:drop db:create db:schema:load
}

function rtdb {
  echo "Preparing Test DB"
  bin/rails db:environment:set RAILS_ENV=test
  RAILS_ENV=test bundle exec rake db:drop db:create db:structure:load tax_rules:db:create tax_rules:db:migrate
  RAILS_ENV=test bundle exec rake bulk_storage:db:drop bulk_storage:db:create bulk_storage:db:structure:load
  RAILS_ENV=test bundle exec rake shards:drop shards:create
  psql tj_test_transactions_shard0 < ./db/tranx_shards_structure.sql
  psql tj_test_transactions_shard1 < ./db/tranx_shards_structure.sql
  psql tj_test_receipt_item_taxes_shard0 < ./db/rits_shards_structure.sql
  psql tj_test_receipt_item_taxes_shard1 < ./db/rits_shards_structure.sql
  RAILS_ENV=test bundle exec rake db:migrate
  echo "DONE!"
}


function kill_port() {
  PORT_NUMBER=$1
  lsof -i tcp:${PORT_NUMBER} | awk 'NR!=1 {print $2}' | xargs kill -9
}

function schemaUpdate() {
  pay schemas:update --repo zoolander --path $@
}

function schemaSearch() {
  pay schemas:search --repo zoolander --path $@
}

function cob() {
  git checkout -b $USER/$1
}

# BetterUp Docker - Local Development Commands
alias busetup="bin/setup" # Installs dependencies, sets up database, starts Docker containers
alias busetup-clean="bin/setup --clean" # Cleans volumes and resets environment (slower but fixes issues)
alias busetup-clean-all="bin/setup --clean-all" # Removes Docker images; most destructive full reset
alias burestart="bin/restart" # Restarts the Dockerized environment
alias bustop="bin/stop" # Stops all running containers
alias budc-ps="docker-compose ps" # Lists running containers and their ports
alias budc-logs="docker-compose logs" # Tails logs for a specific service (usage: budc-logs <service_name>)
alias budc-build="docker-compose build" # Rebuilds a specific service container (usage: budc-build <service_name>)
alias budocker-prune="docker system prune -a && docker volume prune --filter all=true" # Removes all unused Docker data (DESTRUCTIVE)

# BetterUp Database - Migrations, Seeds, and Access
alias budb-migrate="bin/rails db:migrate" # Runs pending migrations
alias budb-migrate-status="bin/rails db:migrate:status" # Shows migration status (up/down)
alias budb-generate-migration="bin/rails generate migration" # Generates a new migration (usage: budb-generate-migration <Name>)
alias buresetdb="bin/resetdb" # Drops and recreates database, runs all migrations, seeds data
alias budb-seed="bin/rails db:seed" # Seeds the database with initial data

# BetterUp Testing - Rails/RSpec
alias burspec="bin/rspec" # Runs the full test suite
alias burspec-file="bin/rspec" # Runs a specific test file (usage: burspec-file spec/path/to/file_spec.rb)
alias butest-db-reset="RAILS_ENV=test bin/rails db:reset" # Resets the test database
alias burails-test="bin/rails test" # Runs Rails tests (if not using RSpec)

# BetterUp Other Useful Commands
alias bufactory-create="rails runner 'FactoryBot.create" # Create test data directly (usage: bufactory-create(:model, ...)')
alias bubootstrap="bu bootstrap developer" # Bootstraps your developer environment
alias bua="grep '^alias bu' ~/.dotfiles/aliases" # Shows all BetterUp aliases